%%% Mathematical Typesetting %%%

% Fix phanntom error when compiling lettear class
% https://tex.stackexchange.com/a/41553/
\let\openbox\relax

% Load mathematical packages
\RequirePackage{amsthm}
\RequirePackage{mathtools}
\RequirePackage{newtxmath}
\RequirePackage{physics}
\IfPackageLoadedTF{newtxmath}{}{%
  % amssymb not needed if newtxmath is loaded
  % See also https://tex.stackexchange.com/a/713195/
  \RequirePackage{amssymb}%
}
\RequirePackage{marvosym}

% Mathematical graphs and diagrams
\RequirePackage{pgfplots}
% TODO: do I need to add TikZ?
% \RequirePackage{tikz}
\pgfplotsset{compat = newest}
\usetikzlibrary{shapes.geometric, arrows, positioning, calc}

% Mathematical environment utilities
\RequirePackage{arydshln}  % For dashed lined in arrays or tabulars (e.g., for RREF matrices)
\RequirePackage{tabu}  % For tabular in mathmode
\RequirePackage{blkarray}  % For the \blockarray commands
% \RequirePackage{nicematrix}
\RequirePackage{algorithm}  % For typesetting algorithms and pseudocode
\RequirePackage[noend]{algpseudocode}
% \RequirePackage[linesnumbered,ruled,vlined]{algorithm2e}

% Various typography
\RequirePackage{dsfont}  % Used for real and complex numbers
\RequirePackage{gensymb}  % For the \degree symbol
\RequirePackage{dutchcal} % Makes mathcal look much nicer; allows mathcal to be lower case
\RequirePackage{xfrac}  % Provides nicer fractions (\sfrac)

% For convenience, make my most common maths environments into commands
% eq is for a numbered equation, and eqn is not
% TODO: consider changing to newenvironment (but that's so many characters to type!)
\newcommand\eq[1]{%
  \begin{equation}
    \begin{aligned}
      \centering
      #1
    \end{aligned}
  \end{equation}
}
\newcommand\eqn[1]{%
  \begin{equation*}
    \begin{aligned}
      \centering
      #1
    \end{aligned}
  \end{equation*}
}

% Make Q.E.D. symbol to be gravestone, right-aligned
% Note: this has to be put *after* \eq of \eqn, as the `aligned` environment doesn't allow
% the below commands to work with \tag...
\renewcommand\qed{\hfill\ensuremath{\blacksquare}}
\renewcommand*\qedsymbol{\hfill\ensuremath{\blacksquare}}
\renewcommand\qed{\tag*{\hfill\ensuremath{\blacksquare}}}

% Essentially hfill for math mode
\makeatletter
\newcommand{\pushright}[1]{\ifmeasuring@#1\else\omit\hfill$\displaystyle#1$\fi\ignorespaces}
\newcommand{\pushleft}[1]{\ifmeasuring@#1\else\omit$\displaystyle#1$\hfill\fi\ignorespaces}
\makeatother
\makeatletter
\newcommand{\specialcell}[1]{\ifmeasuring@#1\else\omit$\displaystyle#1$\ignorespaces\fi}
\makeatother

% Define augmented matrices, e.g. \begin{pmatrix}{cc|or:c}
\makeatletter%Augmented Matrices e.g. \begin{pmatrix}[cc|or:c]
\renewcommand*\env@matrix[1][*\c@MaxMatrixCols c]{%
  \hskip -\arraycolsep
  \let\@ifnextchar\new@ifnextchar
  \array{#1}%
}
\makeatother

% Convenience commands for wrapping things in various parenthetical symbols
\def\paren#1{\ensuremath{\left(#1\right)}}
\def\bparen#1{\ensuremath{\left[#1\right]}}
\def\abs#1{\left|#1\right|}
\def\curly#1{\ensuremath{\left\{#1\right\}}}

% Convenience macros for writing various general mathematical symbols
\def\reals{\ensuremath{\mathds{R}}}
\def\complex{\ensuremath{\mathds{C}}}	
\let\limplies\to
\def\rationals{\ensuremath{\mathds{Q}}}
\let\quotients\rationals
\def\field{\ensuremath{\mathds{F}}}
\def\naturals{\ensuremath{\mathds{N}}}
\def\integers{\ensuremath{\mathds{Z}}}
\def\polys{\ensuremath{\mathcal{P}}}
\def\matrices{\ensuremath{\mathcal{M}}}
\def\z{\mathcal{z}}
\def\mathveebar{\ensuremath{\veebar}}
\let\lxor\mathveebar
\def\lxor{\veebar}
\def\divides{\ensuremath{\mid}}
\newcommand{\restricts}[1]{\ensuremath{\divides_{_{#1}}}}
\def\notdivides{\ensuremath{\nmid}}
\def\suchthat{\ensuremath{\hspace*{1ex}|\hspace*{1ex}}}

% Convenience macros for writing calculus notation
\def\intdd{\mathop{}\!\dd}%because there is no integral space
\def\intddx{\mathop{}\!\dd x}
\def\dvx{\dv{x}}
\def\laplace#1{\ensuremath{\mathcal{L}\left\{#1\right\}\left(s\right)}}
\def\invlaplace#1{\ensuremath{\mathcal{L}^{-1}\left\{#1\right\}\left(s\right)}}

% Convenience macros for writing linear algebra notation
\def\vect#1{\ensuremath{\mathbf{\boldsymbol{#1}}}}  % a vector is typeset boldface
\def\ker#1{\ensuremath{\mathcal{ker}#1}}
\def\range#1{\ensuremath{\text{Range}#1}}
\def\dim#1{\ensuremath{\text{dim}\paren{#1}}}
\def\rank#1{\ensuremath{\text{Rank}#1}}
\def\isomorph{\ensuremath{\cong}}
\newcommand{\vnisomorph}{\rotatebox[origin=c]{-90}{\isomorph}}
\newcommand{\vpisomorph}{\rotatebox[origin=c]{90}{\isomorph}}
\def\numbers{\ensuremath{\mathds{F}}}
%\def\span#1{\ensuremath{\text{span}\paren{#1}}}	
\def\dim#1{\ensuremath{\text{dim}\paren{#1}}}

% Convenience macros for writing combinatorics notation
\newcommand\permute[2][^n]{\prescript{#1\mkern-2.5mu}{}P_{#2}}
\newcommand\combination[2][^n]{\prescript{#1\mkern-0.5mu}{}C_{#2}}

% Convenience macros for writing set theoretical notation
\def\emptyset{\ensuremath{\not\kern-2.5pt \textosfI{0}}}
\let\cardinality\abs
\def\union{\cup}
\def\intersect{\cap}
\def\set#1#2{\curly{#1 \suchthat #2}}
\let\embedsto\hookrightarrow

% Convenience macros for writing proofs
\let\varproves\models
\let\believes\models
\let\satisfies\models
\def\proves{\ensuremath{\vdash}\kern-.7em -}%extends the "arm" of the symbol, bc garamond??
\def\contradiction{\ensuremath{\rightarrow\mspace{-2mu}\leftarrow}}
\let\varcontradiction\bot
% Fix lightning symbol provided by marvosym\r
\renewcommand{\mvchr}[1]{\mbox{\mvs\symbol{#1}}}
\let\varvarcontradiction\Lightning

% Define the undertilde symbol for vector representation
% Adapted from undertilde.sty
\def\undertilde#1{%
  \mathord{%
    \vtop{\ialign{##\crcr
        \ensuremath{%
          \hfil\displaystyle{#1}\hfil%
        }%
        \crcr\noalign{\kern1.5pt\nointerlineskip}%
        \ensuremath{%
          \hfil\widetilde{}\hfil%
        }%
        \crcr\noalign{\kern1.5pt}%
    }}%
  }%
}
\let\utilde\undertilde

% Custom code for right aligning text; useful for proofs
% E.g., \eqn{1+1=2\by{properties of addition}}
\newcommand{\currentsidemargin}{%
  \ifodd\value{page}%
    \oddsidemargin%
  \else%
    \evensidemargin%
  \fi%
}
\newlength{\whatsleft}
\newcommand{\measureremainder}[1]{%
  \begin{tikzpicture}[overlay,remember picture]
    \path (current page.north west) ++(\hoffset, -\voffset)%
    node[anchor=north west, shape=rectangle, inner sep=0, minimum width=\paperwidth, minimum height=\paperheight]%
    (pagearea) {};%
    \path (pagearea.north west) ++(1in+\currentsidemargin,-1in-\topmargin-\headheight-\headsep)%
    node[anchor=north west, shape=rectangle, inner sep=0, minimum width=\textwidth, minimum height=\textheight]%
    (textarea) {};
    % Measure distance to right text border
    \path let \p0 = (0,0), \p1 = (textarea.east) in%
          [/utils/exec={\pgfmathsetlength#1{\x1-\x0}\global#1=#1}];%
  \end{tikzpicture}%
}
\newcommand\by[1]{%
  \measureremainder{\whatsleft}%
  \begin{minipage}[t]{\whatsleft}%
    \hfill by~#1\hspace*{1em}%
  \end{minipage}%
}

% I really never use traditional \bar, I always want to use overline
\let\oldbar\bar
\let\bar\overline

% Define the monus operator
% https://tex.stackexchange.com/a/147796/
% https://en.wikipedia.org/wiki/Monus
% In my experience, a âˆ¸ b is used to equivalent to max(a - b, 0) (but I'm sure it has other uses)
\providecommand{\monus}{% Don't redefine it if available
  \mathbin{% We want a binary operation
    \vphantom{+}% The same height as a plus or minus
    \text{% Change size in sub/superscripts
      \mathsurround=0pt % To be on the safe side
      \ooalign{% Superimpose the two symbols
        \noalign{\kern-.35ex}% but the dot is raised a bit
        \hidewidth$\smash{\cdot}$\hidewidth\cr % Dot
        \noalign{\kern.35ex}% Backup for vertical alignment
        $-$\cr % Minus
      }%
    }%
  }%
}

%%% End Mathematical Typesetting %%%
