#!/usr/bin/env bash

BASH_DIR="${HOME}/scripts/bash/"
TEMPLATES_DIR="${HOME}/tex-macros/templates/"
BEAMER_DIR="${TEMPLATES_DIR}/beamer/"
CLASS_DIR="${TEMPLATES_DIR}/../general_macros/class/"

# source required scripts
source "${BASH_DIR}"/dependencies/source-dependencies.sh

# Help
display_help() {
    echo -e "${BWHITE}Usage: mktex [h] [gcfbp] [dir] [file name] || mktex [b] [dir]${NORM}"
    echo
    echo -e "${ITWHITE}The present script will help to make a new LaTeX file using predefined templates. Important note: because I am bad at shell scripting, only mix options together (i.e., \`-Bc\`, NOT \`--class --bib\`).${NORM}"
    echo
    echo -e "${BBLUE}\t -g | --general\t\t${BYELLOW}Chooses the ${ULINE}${BBLUE}g${BYELLOW}eneral${NORM} ${BYELLOW}template.${NORM}"
    echo -e "${BBLUE}\t -c | --class\t\t${BYELLOW}Chooses the general template via the ${ULINE}${BBLUE}c${BYELLOW}lass${NORM}${BYELLOW}.${NORM}"
    echo -e "${BBLUE}\t -C | --classBib\t${BYELLOW}Chooses the general template via the citations ${ULINE}${BBLUE}c${BYELLOW}lass${NORM}${BYELLOW}.${NORM}"
    echo -e "${BBLUE}\t -f | --figure\t\t${BYELLOW}Chooses the ${ULINE}${BBLUE}f${BYELLOW}igure${NORM} ${BYELLOW}template.${NORM}"
    echo -e "${BBLUE}\t -b | --beamer\t\t${BYELLOW}Chooses the ${ULINE}${BBLUE}b${BYELLOW}eamer${NORM}${BYELLOW} (slide-show) template.${NORM}"
    echo -e "${BBLUE}\t -B | --bib\t\t${BYELLOW}Creates a ${ULINE}${BBLUE}B${BYELLOW}ibliography${NORM}${BYELLOW} file named \`references.bib\` in a given directory.${NORM}"
    echo -e "${BBLUE}\t -p | --poi\t\t${BYELLOW}Chooses the ${ULINE}${BBLUE}P${BYELLOW}ersons of Interest${NORM}${BYELLOW} template.${NORM}"
    echo -e "${BBLUE}\t -h | --help\t\t${BYELLOW}Shows ${ULINE}${BBLUE}h${BYELLOW}elp${NORM} ${BYELLOW}(present output).${NORM}"
    help_help '2'
    help_examples '\`% !TEX TS-program = pdflatex\` is used at the start of the arteacle* classes.'
    help_examples 'Also note that the input file name should omit the .tex extension.'
    clean-exit
}

# Check if dir is specified
check_dir_spec() {
    if [[ -z $1 ]]
    then
        echo -e "${BYELLOW}You must specify a directory in which to make the .tex file.${BNORM}"
        clean-exit
    fi
}


# Build templte
build_template() {
# create template!
    check_dir_spec $2 && \
    if [[ "${1}" == 'beamer' ]]
    then
        cp -r "${BEAMER_DIR}"/*.png "${2}/"
        cp -r "${BEAMER_DIR}"/*.sty "${2}/"
        cp "${BEAMER_DIR}/beamer.tex" "${2}/" && \
        if [[ -z $3 ]]
        then
            mv "${2}/beamer.tex" "${2}/document.tex"
        else
            mv "${2}/beamer.tex" "${2}/${3}.tex"
        fi
    elif [[ "${1}" == 'class' ]]
    then
        cp -r "${CLASS_DIR}/arteacle.cls" "${2}/"
        cp "${TEMPLATES_DIR}/template_Class_Typesetting.tex" "${2}/"
        if [[ -z $3 ]]
        then
            mv "${2}/template_Class_Typesetting.tex" "${2}/document.tex"
        else
            mv "${2}/template_Class_Typesetting.tex" "${2}/${3}.tex"
        fi
    elif [[ "${1}" == 'classBib' ]]
    then
        cp -r "${CLASS_DIR}/arteacleBib.cls" "${2}/"
        cp "${TEMPLATES_DIR}/template_Class_Bib_Typesetting.tex" "${2}/"
        if [[ -z $3 ]]
        then
            mv "${2}/template_Class_Bib_Typesetting.tex" "${2}/document.tex"
        else
            mv "${2}/template_Class_Bib_Typesetting.tex" "${2}/${3}.tex"
        fi
    else
        cp "${TEMPLATES_DIR}/${1}.tex" "${2}/" && \
        if [[ -z $3 ]]
        then
            mv "${2}/${1}.tex" "${2}/document.tex"
        else
            mv "${2}/${1}.tex" "${2}/${3}.tex"
        fi
    fi
# make name Jake W. Ireland if it's me!
    if [[ $(whoami) == "jakeireland" ]]
    then
        if [[ "${1}" == 'class' ]] || [[ "${1}" == 'classBib' ]]
        then
            if [[ -f "${2}/document.tex" ]]
            then
                perl -pi -e 's/\\author{}/\\author{Jake W\. Ireland}/g' "${2}/document.tex"
            elif [[ -f "${2}/${3}.tex" ]]
            then
                perl -pi -e 's/\\author{}/\\author{Jake W\. Ireland}/g' "${2}/${3}.tex"
            fi
        fi
    fi
}

create_bib() {
    touch "${1}/references.bib"
}

# Make templates
while getopts ":-:gfbphcCB" OPTION; do
        case $OPTION in
                -)
                    case $OPTARG in
                        bib)
                            create_bib $2 ;;
                        class)
                            build_template class $2 $3 ;;
                        classBib)
                            build_template classBib $2 $3 ;;
                        help)
                            display_help ;;
                        figure)
                            build_template template_flow_chart $2 $3 ;;
                        general)
                            build_template template_Teagoslavic_Typesetting $2 $3 ;;
                        beamer)
                            build_template beamer $2 $3 ;;
                        poi)
                            build_template template_Tea_P-O-I $2 $3 ;;
                        *)
                            opt_err ;;
                    esac ;;
                C)
                    build_template classBib $2 $3 ;;
                B)
                    create_bib $2 ;;
                c)
                    build_template class $2 $3 ;;
                f)
                    build_template template_flow_chart $2 $3 ;;
                h)
                    display_help ;;
                g)
                    build_template template_Teagoslavic_Typesetting $2 $3 ;;
                b)
                    build_template beamer $2 $3 ;;
                p)
                    build_template template_Tea_P-O-I $2 $3 ;;
                *)
                    opt_err ;;
        esac
done

# if no options were passed
if [ $OPTIND -eq 1 ]
then
    echo -e "${BYELLOW}You must pass an option to the script.  Please use -h for help.${NORM}"
    clean-exit
fi
